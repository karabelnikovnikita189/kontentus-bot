import asyncio
import sqlite3
import google.generativeai as genai
from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import CommandStart
import os
from dotenv import load_dotenv
import threading
from http.server import SimpleHTTPRequestHandler, HTTPServer

# === 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
CHANNEL_ID = "@kontentus_chanel"  # <-- –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ username –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä "@kontentus"

# === 2. –ë–æ—Ç –∏ Gemini ===
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
genai.configure(api_key=GEMINI_API_KEY)
MODEL_NAME = "models/gemini-2.0-flash"

# === 3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ===
conn = sqlite3.connect("users.db")
cur = conn.cursor()
cur.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    free_generations INTEGER DEFAULT 5,
    referrer_id INTEGER DEFAULT NULL,
    invited_count INTEGER DEFAULT 0,
    joined_bonus INTEGER DEFAULT 0
)
""")
conn.commit()

# === 4. –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ===
def main_keyboard():
    kb = InlineKeyboardBuilder()
    kb.button(text="üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞", callback_data="gen_text")
    kb.button(text="üí° –ò–¥–µ—è –¥–ª—è –ø–æ—Å—Ç–∞", callback_data="idea_post")
    kb.button(text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="invite_friend")
    kb.adjust(1)
    return kb.as_markup()

def back_to_menu_keyboard():
    kb = InlineKeyboardBuilder()
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu")
    return kb.as_markup()

def join_channel_keyboard():
    kb = InlineKeyboardBuilder()
    kb.button(text="üì¢ –í—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ", url=f"https://t.me/{CHANNEL_ID.lstrip('@')}")
    kb.button(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="joined_channel")
    kb.adjust(1)
    return kb.as_markup()

# === 5. –†–∞–±–æ—Ç–∞ —Å –ë–î ===
def get_user(user_id):
    cur.execute("SELECT free_generations FROM users WHERE user_id = ?", (user_id,))
    result = cur.fetchone()
    if result:
        return result[0]
    else:
        cur.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
        conn.commit()
        return 5

def decrease_generation(user_id):
    cur.execute("UPDATE users SET free_generations = free_generations - 1 WHERE user_id = ?", (user_id,))
    conn.commit()

# === 6. /start –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞ + –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ===
@dp.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    args = message.text.split()
    referrer_id = None

    if len(args) > 1:
        try:
            referrer_id = int(args[1])
        except:
            referrer_id = None

    # –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ
    cur.execute("SELECT referrer_id FROM users WHERE user_id = ?", (user_id,))
    existing = cur.fetchone()

    if existing is None:
        # –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å —Å referrer (–µ—Å–ª–∏ –µ—Å—Ç—å)
        cur.execute("INSERT INTO users (user_id, free_generations, referrer_id) VALUES (?, ?, ?)",
                    (user_id, 5, referrer_id))
        conn.commit()

        # –µ—Å–ª–∏ –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π —Ä–µ—Ñ–µ—Ä–µ—Ä (–∏ —ç—Ç–æ –Ω–µ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) ‚Äî –Ω–∞—á–∏—Å–ª—è–µ–º –µ–º—É +1 –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º invited_count
        if referrer_id and referrer_id != user_id:
            cur.execute("SELECT user_id FROM users WHERE user_id = ?", (referrer_id,))
            if cur.fetchone():  # —Ä–µ—Ñ–µ—Ä–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                cur.execute("""
                    UPDATE users
                    SET free_generations = free_generations + 2,
                        invited_count = invited_count + 1
                    WHERE user_id = ?
                """, (referrer_id,))
                conn.commit()
                try:
                    await bot.send_message(
                        referrer_id,
                        "üéâ –ü–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! –¢—ã –ø–æ–ª—É—á–∏–ª +2 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π üí´"
                    )
                except:
                    pass

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–ö–æ–Ω—Ç–µ–Ω—Ç—É—Å</b> ‚Äî —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É.\n\n"
            "üì¢ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏ –±–æ–Ω—É—Å—ã.\n\n"
            "üéÅ –ó–∞ –ø–æ–¥–ø–∏—Å–∫—É ‚Äî <b>+3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</b> (–Ω–∞–∂–º–∏ ¬´‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏).",
            reply_markup=join_channel_keyboard()
        )
        return

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å —Ç–µ–∫—É—â–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
    left = get_user(user_id)
    invite_link = f"https://t.me/{(await bot.me()).username}?start={user_id}"
    await message.answer(
        f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, <b>{message.from_user.first_name}</b>!\n\n"
        f"‚ú® –£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å <b>{left}</b> –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π.\n\n"
        f"üíå –ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π –∏ –ø–æ–ª—É—á–∏ +2 –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞: {invite_link}",
        reply_markup=main_keyboard()
    )

# === 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–±–æ–Ω—É—Å –æ–¥–∏–Ω —Ä–∞–∑) ===
@dp.callback_query(F.data == "joined_channel")
async def joined_channel(callback: CallbackQuery):
    user_id = callback.from_user.id

    # —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –≤ –ë–î (–Ω–∞ –≤—Å—è–∫–∏–π)
    cur.execute("SELECT joined_bonus FROM users WHERE user_id = ?", (user_id,))
    row = cur.fetchone()
    if row is None:
        # –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî —Å–æ–∑–¥–∞—ë–º –∏ –≥–æ–≤–æ—Ä–∏–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å /start
        cur.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
        conn.commit()
        await callback.message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–º–∏ /start –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")
        return

    already = row[0]

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª –±–æ–Ω—É—Å ‚Äî –Ω–µ –¥–∞—ë–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
    if already == 1:
        await callback.message.answer("‚úÖ –¢—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª –±–æ–Ω—É—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É.", reply_markup=main_keyboard())
        return

    # –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ get_chat_member
    try:
        member = await bot.get_chat_member(CHANNEL_ID, user_id)
        if member.status in ("member", "administrator", "creator"):
            # –Ω–∞—á–∏—Å–ª—è–µ–º +3 –∏ —Å—Ç–∞–≤–∏–º —Ñ–ª–∞–≥
            cur.execute("UPDATE users SET free_generations = free_generations + 3, joined_bonus = 1 WHERE user_id = ?", (user_id,))
            conn.commit()
            await callback.message.answer("üéâ –°–ø–∞—Å–∏–±–æ! –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ ‚Äî —Ç–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ +3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.", reply_markup=main_keyboard())
        else:
            await callback.message.answer("‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É¬ª —Å–Ω–æ–≤–∞.", reply_markup=join_channel_keyboard())
    except Exception as e:
        # –µ—Å–ª–∏ get_chat_member –¥–∞—ë—Ç –æ—à–∏–±–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –∏–ª–∏ –±–æ—Ç –Ω–µ –∞–¥–º–∏–Ω) ‚Äî –≤—ã–≤–æ–¥–∏–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.answer(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É: {e}\n\n–ï—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–π, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –≤ –Ω—ë–º —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", reply_markup=join_channel_keyboard())

# === 8. "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –∏ –∫–Ω–æ–ø–∫—É —à–∞—Ä–∏–Ω–≥–∞ ===
@dp.callback_query(F.data == "invite_friend")
async def invite_friend(callback: CallbackQuery):
    user_id = callback.from_user.id
    invite_link = f"https://t.me/{(await bot.me()).username}?start={user_id}"
    # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —à–∞—Ä–∏–Ω–≥–∞ (switch_inline_query –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö —Å—Å—ã–ª–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º url share)
    kb = InlineKeyboardBuilder()
    share_text = f"üî• –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –±–æ—Ç—É –ö–æ–Ω—Ç–µ–Ω—Ç—É—Å!\n–û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∏–¥–µ–∏ –∏ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤ üí°\n‚û°Ô∏è –ú–æ—è —Å—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:{invite_link}"
    kb.button(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", url=f"https://t.me/share/url?url={invite_link}&text={share_text}")
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu")
    await callback.message.answer(f"üíå –ü–æ–¥–µ–ª–∏—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã:\n\n{invite_link}", reply_markup=kb.as_markup())

# === 9. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ (–¥–∏–∞–ª–æ–≥) ===
# –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
@dp.callback_query(F.data == "gen_text")
async def gen_text_start(callback: CallbackQuery):
    await callback.message.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞:", reply_markup=back_to_menu_keyboard())
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ö—ç–Ω–¥–ª–µ—Ä –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    dp.message.register(gen_text_handle, F.text)

async def gen_text_handle(message: Message):
    user_id = message.from_user.id
    left = get_user(user_id)
    if left <= 0:
        await message.answer("üö´ –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.", reply_markup=back_to_menu_keyboard())
        return

    prompt = message.text.strip()
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é...")

    try:
        model = genai.GenerativeModel(MODEL_NAME)
        response = model.generate_content(prompt).text
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return

    decrease_generation(user_id)
    left -= 1
    await message.answer(f"{response}\n\n–û—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: {left}", reply_markup=back_to_menu_keyboard())

# === 10. –ò–¥–µ—è –¥–ª—è –ø–æ—Å—Ç–∞ (–¥–∏–∞–ª–æ–≥) ===
@dp.callback_query(F.data == "idea_post")
async def idea_post_start(callback: CallbackQuery):
    await callback.message.answer("üí° –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –ø–æ—Å—Ç–∞ ‚Äî —è —Å–æ–∑–¥–∞–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—Ç –Ω–∞ —ç—Ç—É —Ç–µ–º—É:", reply_markup=back_to_menu_keyboard())
    dp.message.register(idea_post_handle, F.text)

async def idea_post_handle(message: Message):
    user_id = message.from_user.id
    left = get_user(user_id)
    if left <= 0:
        await message.answer("üö´ –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.", reply_markup=back_to_menu_keyboard())
        return

    topic = message.text.strip()
    prompt = f"–°–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –∏ —Ü–µ–ø–ª—è—é—â–∏–π –ø–æ—Å—Ç –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π –Ω–∞ —Ç–µ–º—É: {topic}. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ö—ç—à—Ç–µ–≥–∏, –¥–æ–±–∞–≤—å 1-2 —ç–º–æ–¥–∑–∏."

    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ—é –¥–ª—è –ø–æ—Å—Ç–∞...")

    try:
        model = genai.GenerativeModel(MODEL_NAME)
        response = model.generate_content(prompt).text
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return

    decrease_generation(user_id)
    left -= 1
    await message.answer(f"üí° –í–æ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—Ç:\n\n{response}\n\n–û—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: {left}", reply_markup=back_to_menu_keyboard())

# === 11. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
@dp.callback_query(F.data == "menu")
async def back_to_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    left = get_user(user_id)
    if left > 0:
        text = f"üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n‚ú® –£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å: <b>{left}</b> –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π üí´"
    else:
        text = "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –Ω–µ—Ç. –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∏–ª–∏ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ üéÅ"
    await callback.message.answer(text, reply_markup=main_keyboard())

# === 12. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–µ—Å–ª–∏ —é–∑–µ—Ä –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ—Ç —Ç–µ–∫—Å—Ç –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞) ===
@dp.message()
async def handle_message(message: Message):
    # –ø–æ–≤–µ–¥–µ–Ω–∏–µ: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ—Ç —Ç–µ–∫—Å—Ç (–Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏/—Ä–µ–∂–∏–º—ã), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞
    user_id = message.from_user.id
    left = get_user(user_id)
    if left <= 0:
        await message.answer("üö´ –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.", reply_markup=back_to_menu_keyboard())
        return

    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é...")

    try:
        model = genai.GenerativeModel(MODEL_NAME)
        response = model.generate_content(message.text).text
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return

    decrease_generation(user_id)
    left -= 1
    await message.answer(f"{response}\n\n–û—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: {left}", reply_markup=back_to_menu_keyboard())

# === 13. –ó–∞–ø—É—Å–∫ ===
async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

def run_web_server():
    try:
        server = HTTPServer(('0.0.0.0', 8080), SimpleHTTPRequestHandler)
        print("‚úÖ Render: —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
        server.serve_forever()
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞:", e)

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_web_server, daemon=True).start()

if __name__ == "__main__":
    asyncio.run(main())
